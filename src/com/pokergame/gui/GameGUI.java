package com.pokergame.gui;

import com.pokergame.backend.Card;
import com.pokergame.backend.Checker;
import static com.pokergame.backend.Card.BACKIMAGE;
import com.pokergame.backend.Combination;
import com.pokergame.backend.Deck;
import com.pokergame.backend.IOHelper;
import com.pokergame.backend.Player;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;

/**
 *
 * @author riana joy
 */
public class GameGUI extends javax.swing.JFrame {

    private Player player;
    int DrawCtr = 0;
    int ChangeCtr = 0;
    int DealCtr = 0;
    Deck deck = new Deck(true);
    boolean changePressed = false;

    /**
     * Creates new form GameGUI
     */
    public GameGUI() {
        initComponents();
        cardsInTable = new JLabel[5];
        cardsInTable[0] = Card1Label;
        cardsInTable[1] = Card2Label;
        cardsInTable[2] = Card3Label;
        cardsInTable[3] = Card4Label;
        cardsInTable[4] = Card5Label;
        disablePlayingButtons();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        woodPanel1 = new com.pokergame.gui.WoodPanel();
        tablePanel1 = new com.pokergame.gui.TablePanel();
        Card1Panel = new javax.swing.JPanel();
        Card1Label = new javax.swing.JLabel();
        Card2Panel = new javax.swing.JPanel();
        Card2Label = new javax.swing.JLabel();
        Card3Panel = new javax.swing.JPanel();
        Card3Label = new javax.swing.JLabel();
        Card4Panel = new javax.swing.JPanel();
        Card4Label = new javax.swing.JLabel();
        Card5Panel = new javax.swing.JPanel();
        Card5Label = new javax.swing.JLabel();
        woodTopPanel1 = new com.pokergame.gui.WoodTopPanel();
        CashLabel = new javax.swing.JLabel();
        BetLabel = new javax.swing.JLabel();
        BetField = new javax.swing.JTextField();
        CashAppearLabel = new javax.swing.JLabel();
        EnterBetB = new javax.swing.JButton();
        DrawB = new javax.swing.JButton();
        ChangeB = new javax.swing.JButton();
        DealB = new javax.swing.JButton();
        UsernameLabel = new javax.swing.JLabel();
        UsernameAppearLabel = new javax.swing.JLabel();
        BackToMenuB = new javax.swing.JButton();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setExtendedState(6);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        woodPanel1.setPreferredSize(new java.awt.Dimension(700, 602));

        tablePanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        tablePanel1.setOpaque(false);
        tablePanel1.setPreferredSize(new java.awt.Dimension(700, 450));

        Card1Panel.setBackground(new java.awt.Color(0, 51, 51));
        Card1Panel.setForeground(new java.awt.Color(0, 102, 51));
        Card1Panel.setOpaque(false);
        Card1Panel.setPreferredSize(new java.awt.Dimension(138, 204));

        Card1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Card1Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card1LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Card1PanelLayout = new javax.swing.GroupLayout(Card1Panel);
        Card1Panel.setLayout(Card1PanelLayout);
        Card1PanelLayout.setHorizontalGroup(
            Card1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Card1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Card1Label, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addContainerGap())
        );
        Card1PanelLayout.setVerticalGroup(
            Card1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Card1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Card1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Card2Panel.setOpaque(false);
        Card2Panel.setPreferredSize(new java.awt.Dimension(138, 204));

        Card2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Card2Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card2LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Card2PanelLayout = new javax.swing.GroupLayout(Card2Panel);
        Card2Panel.setLayout(Card2PanelLayout);
        Card2PanelLayout.setHorizontalGroup(
            Card2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Card2PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Card2Label, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addContainerGap())
        );
        Card2PanelLayout.setVerticalGroup(
            Card2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Card2PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Card2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Card3Panel.setOpaque(false);
        Card3Panel.setPreferredSize(new java.awt.Dimension(138, 204));

        Card3Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Card3Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card3LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Card3PanelLayout = new javax.swing.GroupLayout(Card3Panel);
        Card3Panel.setLayout(Card3PanelLayout);
        Card3PanelLayout.setHorizontalGroup(
            Card3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Card3PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Card3Label, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addContainerGap())
        );
        Card3PanelLayout.setVerticalGroup(
            Card3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Card3PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Card3Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Card4Panel.setOpaque(false);
        Card4Panel.setPreferredSize(new java.awt.Dimension(138, 204));

        Card4Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Card4Label.setPreferredSize(new java.awt.Dimension(138, 204));
        Card4Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card4LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Card4PanelLayout = new javax.swing.GroupLayout(Card4Panel);
        Card4Panel.setLayout(Card4PanelLayout);
        Card4PanelLayout.setHorizontalGroup(
            Card4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Card4PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Card4Label, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addContainerGap())
        );
        Card4PanelLayout.setVerticalGroup(
            Card4PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Card4PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Card4Label, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        Card5Panel.setOpaque(false);
        Card5Panel.setPreferredSize(new java.awt.Dimension(138, 204));

        Card5Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Card5Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Card5LabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Card5PanelLayout = new javax.swing.GroupLayout(Card5Panel);
        Card5Panel.setLayout(Card5PanelLayout);
        Card5PanelLayout.setHorizontalGroup(
            Card5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Card5PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Card5Label, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                .addContainerGap())
        );
        Card5PanelLayout.setVerticalGroup(
            Card5PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Card5PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Card5Label, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout tablePanel1Layout = new javax.swing.GroupLayout(tablePanel1);
        tablePanel1.setLayout(tablePanel1Layout);
        tablePanel1Layout.setHorizontalGroup(
            tablePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(tablePanel1Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(Card4Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(Card1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(Card2Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(Card3Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(Card5Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        tablePanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Card1Panel, Card4Panel});

        tablePanel1Layout.setVerticalGroup(
            tablePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanel1Layout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addGroup(tablePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Card5Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Card3Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Card2Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Card1Panel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Card4Panel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(120, Short.MAX_VALUE))
        );

        woodTopPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        woodTopPanel1.setPreferredSize(new java.awt.Dimension(700, 255));

        CashLabel.setBackground(new java.awt.Color(22, 13, 8));
        CashLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        CashLabel.setText("Cash: $");

        BetLabel.setBackground(new java.awt.Color(0, 0, 0));
        BetLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        BetLabel.setText("Bet:");

        BetField.setBackground(new java.awt.Color(102, 102, 102));
        BetField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BetFieldActionPerformed(evt);
            }
        });

        CashAppearLabel.setBackground(new java.awt.Color(22, 13, 8));
        CashAppearLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        CashAppearLabel.setText("jLabel1");

        EnterBetB.setBackground(new java.awt.Color(79, 28, 20));
        EnterBetB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EnterBetB.setText("Enter");
        EnterBetB.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        EnterBetB.setContentAreaFilled(false);
        EnterBetB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EnterBetBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EnterBetBMouseExited(evt);
            }
        });
        EnterBetB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterBetBActionPerformed(evt);
            }
        });

        DrawB.setBackground(new java.awt.Color(79, 28, 20));
        DrawB.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        DrawB.setText("Draw");
        DrawB.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        DrawB.setContentAreaFilled(false);
        DrawB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DrawBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DrawBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DrawBMouseExited(evt);
            }
        });
        DrawB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DrawBActionPerformed(evt);
            }
        });

        ChangeB.setBackground(new java.awt.Color(79, 28, 20));
        ChangeB.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        ChangeB.setText("Change");
        ChangeB.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        ChangeB.setContentAreaFilled(false);
        ChangeB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChangeBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ChangeBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ChangeBMouseExited(evt);
            }
        });
        ChangeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeBActionPerformed(evt);
            }
        });

        DealB.setBackground(new java.awt.Color(79, 28, 20));
        DealB.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        DealB.setText("Deal");
        DealB.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        DealB.setContentAreaFilled(false);
        DealB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DealBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DealBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DealBMouseExited(evt);
            }
        });
        DealB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DealBActionPerformed(evt);
            }
        });

        UsernameLabel.setBackground(new java.awt.Color(22, 13, 8));
        UsernameLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        UsernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UsernameLabel.setText("Username:");

        UsernameAppearLabel.setBackground(new java.awt.Color(22, 13, 8));
        UsernameAppearLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        UsernameAppearLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UsernameAppearLabel.setText("jLabel2");

        BackToMenuB.setBackground(new java.awt.Color(79, 28, 20));
        BackToMenuB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BackToMenuB.setText("Back to Menu");
        BackToMenuB.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        BackToMenuB.setContentAreaFilled(false);
        BackToMenuB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BackToMenuBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BackToMenuBMouseExited(evt);
            }
        });
        BackToMenuB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToMenuBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout woodTopPanel1Layout = new javax.swing.GroupLayout(woodTopPanel1);
        woodTopPanel1.setLayout(woodTopPanel1Layout);
        woodTopPanel1Layout.setHorizontalGroup(
            woodTopPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(woodTopPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(woodTopPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(woodTopPanel1Layout.createSequentialGroup()
                        .addComponent(CashLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CashAppearLabel))
                    .addGroup(woodTopPanel1Layout.createSequentialGroup()
                        .addComponent(UsernameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UsernameAppearLabel)))
                .addGroup(woodTopPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(woodTopPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BetLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BetField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EnterBetB, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(woodTopPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(DrawB, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ChangeB, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DealB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                        .addComponent(BackToMenuB, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        woodTopPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ChangeB, DealB, DrawB});

        woodTopPanel1Layout.setVerticalGroup(
            woodTopPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(woodTopPanel1Layout.createSequentialGroup()
                .addGroup(woodTopPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(woodTopPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(woodTopPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(woodTopPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(woodTopPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(EnterBetB, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(woodTopPanel1Layout.createSequentialGroup()
                                        .addComponent(BetField)
                                        .addGap(5, 5, 5))))
                            .addGroup(woodTopPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(CashLabel)
                                .addComponent(CashAppearLabel)))
                        .addGap(61, 61, 61)
                        .addGroup(woodTopPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(BackToMenuB, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(woodTopPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(UsernameLabel)
                                .addComponent(UsernameAppearLabel))))
                    .addGroup(woodTopPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(BetLabel)
                        .addGap(18, 18, 18)
                        .addGroup(woodTopPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DrawB, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ChangeB, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DealB))))
                .addGap(63, 63, 63))
        );

        woodTopPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ChangeB, DealB, DrawB});

        javax.swing.GroupLayout woodPanel1Layout = new javax.swing.GroupLayout(woodPanel1);
        woodPanel1.setLayout(woodPanel1Layout);
        woodPanel1Layout.setHorizontalGroup(
            woodPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(woodPanel1Layout.createSequentialGroup()
                .addContainerGap(353, Short.MAX_VALUE)
                .addGroup(woodPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tablePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
                    .addComponent(woodTopPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE))
                .addContainerGap(353, Short.MAX_VALUE))
        );
        woodPanel1Layout.setVerticalGroup(
            woodPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(woodPanel1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(tablePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(woodTopPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        getContentPane().add(woodPanel1);

        setSize(new java.awt.Dimension(1606, 689));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BetFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BetFieldActionPerformed

    }//GEN-LAST:event_BetFieldActionPerformed

    private void DrawBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DrawBActionPerformed

        for (int i = 0; i < 5; i++) {
            player.addCard(deck.draw());
        }

        ArrayList<Card> cardsInHand = player.getCardsInHand();
        int ctr = 0;
        for (Card card : cardsInHand) {
            ImageIcon image = card.getImage();
            cardsInTable[ctr].setIcon(image);
            ctr++;
        }
        DrawB.setEnabled(false);
    }//GEN-LAST:event_DrawBActionPerformed

    private void EnterBetBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterBetBActionPerformed

        double bet = 0.0;
        try {
            bet = Double.parseDouble(BetField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid bet!");
            BetField.setText("");
            return;
        }

        if (bet < 0) {
            JOptionPane.showMessageDialog(this, "You cannot bet negative values!");
            BetField.setText("");
            return;
        }
        if (bet > player.getCash()) {
            JOptionPane.showMessageDialog(this, "You cannot bet more than the current cash in hand!");
            BetField.setText("");
            return;
        }

        int n = JOptionPane.showConfirmDialog(this, "Are you sure want to bet " + bet + "?", "Bet Verification", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            player.setCash(player.getCash() - bet);
            BetField.setEditable(false);
            EnterBetB.setEnabled(false);
            enablePlayingButtons();
            CashAppearLabel.setText(player.getCash() + "");
            IOHelper.serializeThatPlayerYo(player);
        } else {
            BetField.setText("");
        }
    }//GEN-LAST:event_EnterBetBActionPerformed

    private void BackToMenuBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToMenuBActionPerformed
        player.removeCards();
        resetState();
        this.dispose();
        MainGUI game = new MainGUI();
        game.setPlayingPlayer(player);
        game.setVisible(true);
    }//GEN-LAST:event_BackToMenuBActionPerformed

    private void Card1LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card1LabelMouseClicked
        flipCard(0);
    }//GEN-LAST:event_Card1LabelMouseClicked

    private void Card2LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card2LabelMouseClicked
        flipCard(1);
    }//GEN-LAST:event_Card2LabelMouseClicked

    private void Card3LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card3LabelMouseClicked
        flipCard(2);
    }//GEN-LAST:event_Card3LabelMouseClicked

    private void Card4LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card4LabelMouseClicked
        flipCard(3);
    }//GEN-LAST:event_Card4LabelMouseClicked

    private void Card5LabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card5LabelMouseClicked
        flipCard(4);
    }//GEN-LAST:event_Card5LabelMouseClicked

    private void ChangeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeBActionPerformed
        ArrayList<Card> cardsInHand = player.getCardsInHand();
        int ctr = 0;
        for (Card card : cardsInHand) {
            if (!card.isRevealed()) {
                card = new Card(deck.draw());
                cardsInHand.set(ctr, card);
                cardsInTable[ctr].setIcon(card.getImage());
            }
            ctr++;
        }
        player.setCardsInHand(cardsInHand);
        ChangeB.setEnabled(false);
        changePressed = true;

    }//GEN-LAST:event_ChangeBActionPerformed

    private void DrawBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DrawBMouseEntered

        DrawB.setForeground(Color.GRAY);
        Border thickBorder = new LineBorder(Color.GRAY, 3);
        DrawB.setBorder(thickBorder);

    }//GEN-LAST:event_DrawBMouseEntered

    private void DrawBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DrawBMouseExited

        if (!DrawB.isEnabled()) {
            DrawB.setForeground(Color.GRAY);
            Border border = new LineBorder(Color.GRAY, 3);
            DrawB.setBorder(border);
        } else {
            DrawB.setForeground(Color.BLACK);
            Border thickBorder = new LineBorder(Color.BLACK, 3);
            DrawB.setBorder(thickBorder);
        }
    }//GEN-LAST:event_DrawBMouseExited

    private void ChangeBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChangeBMouseEntered

        ChangeB.setForeground(Color.GRAY);
        Border thickBorder = new LineBorder(Color.GRAY, 3);
        ChangeB.setBorder(thickBorder);
    }//GEN-LAST:event_ChangeBMouseEntered

    private void ChangeBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChangeBMouseExited

        if (!ChangeB.isEnabled()) {
            ChangeB.setForeground(Color.GRAY);
            Border border = new LineBorder(Color.GRAY, 3);
            ChangeB.setBorder(border);
        } else {
            ChangeB.setForeground(Color.BLACK);
            Border border = new LineBorder(Color.BLACK, 3);
            ChangeB.setBorder(border);
        }
    }//GEN-LAST:event_ChangeBMouseExited

    private void DealBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DealBMouseEntered

        DealB.setForeground(Color.GRAY);
        Border thickBorder = new LineBorder(Color.GRAY, 3);
        DealB.setBorder(thickBorder);
    }//GEN-LAST:event_DealBMouseEntered

    private void DealBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DealBMouseExited

        if (!DealB.isEnabled()) {
            DealB.setForeground(Color.GRAY);
            Border border = new LineBorder(Color.GRAY, 3);
            DealB.setBorder(border);
        } else {
            DealB.setForeground(Color.BLACK);
            Border thickBorder = new LineBorder(Color.BLACK, 3);
            DealB.setBorder(thickBorder);
        }
    }//GEN-LAST:event_DealBMouseExited

    private void BackToMenuBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToMenuBMouseEntered

        BackToMenuB.setForeground(Color.GRAY);
        Border thickBorder = new LineBorder(Color.GRAY, 3);
        BackToMenuB.setBorder(thickBorder);
    }//GEN-LAST:event_BackToMenuBMouseEntered

    private void BackToMenuBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackToMenuBMouseExited

        BackToMenuB.setForeground(Color.BLACK);
        Border thickBorder = new LineBorder(Color.BLACK, 3);
        BackToMenuB.setBorder(thickBorder);
    }//GEN-LAST:event_BackToMenuBMouseExited

    private void EnterBetBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EnterBetBMouseEntered

        EnterBetB.setForeground(Color.GRAY);
        Border thickBorder = new LineBorder(Color.GRAY, 3);
        EnterBetB.setBorder(thickBorder);
    }//GEN-LAST:event_EnterBetBMouseEntered

    private void EnterBetBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EnterBetBMouseExited

        EnterBetB.setForeground(Color.BLACK);
        Border thickBorder = new LineBorder(Color.BLACK, 3);
        EnterBetB.setBorder(thickBorder);
        if (!EnterBetB.isEnabled()) {
            EnterBetB.setForeground(Color.GRAY);
            Border border = new LineBorder(Color.GRAY, 3);
            EnterBetB.setBorder(border);
        }
    }//GEN-LAST:event_EnterBetBMouseExited

    private void DrawBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DrawBMouseClicked

        DrawCtr++;
        if (!DrawB.isEnabled() && DrawCtr > 1) {
            JOptionPane.showMessageDialog(this, "You cannot draw from pile. Press OK to continue");
        }
    }//GEN-LAST:event_DrawBMouseClicked

    private void ChangeBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChangeBMouseClicked

        ChangeCtr++;
        if (!ChangeB.isEnabled() && ChangeCtr > 1) {
            JOptionPane.showMessageDialog(this, "You cannot change hand. Press OK to continue");
        }
    }//GEN-LAST:event_ChangeBMouseClicked

    private void DealBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DealBActionPerformed

        Checker checker = new Checker();
        Combination combination = checker.evaluateHand(player);
        String prompt = (!combination.getName().equals("nothing")) ? "You got a " + combination.getName() + "!" : "You got nothing. :(";
        JOptionPane.showMessageDialog(this, prompt);
        double bet = Double.parseDouble(BetField.getText());
        double payout = bet * combination.getCashMultiplier();
        player.setCash(player.getCash() + payout);
        JOptionPane.showMessageDialog(this, "You won " + payout + "! You now have " + player.getCash() + "!");
        CashAppearLabel.setText(player.getCash() + "");
        player.removeCards();
        DealB.setEnabled(false);
        IOHelper.serializeThatPlayerYo(player);
        resetState();
        if (player.isBankrupt()) {
            JOptionPane.showMessageDialog(this, player.getUsername() + ", you are now bankrupt. Press OK to exit game.");
            this.dispose();
            MainGUI main = new MainGUI();
            main.setPlayingPlayer(player);
            main.setVisible(true);
        }
    }//GEN-LAST:event_DealBActionPerformed

    private void DealBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DealBMouseClicked

        DealCtr++;
        if (!DealB.isEnabled() && DealCtr > 1) {
            JOptionPane.showMessageDialog(this, "You cannot deal again. Go back to Menu to play again.");
        }
    }//GEN-LAST:event_DealBMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameGUI().setVisible(true);
            }
        });
    }

    public void setPlayingPlayer(Player player) {
        this.player = player;
        UsernameAppearLabel.setText(" " + player.getUsername());
        CashAppearLabel.setText(" " + player.getCash());
    }

    public void resetState() {
        deck = new Deck(true);
        Card1Label.setIcon(null);
        Card2Label.setIcon(null);
        Card3Label.setIcon(null);
        Card4Label.setIcon(null);
        Card5Label.setIcon(null);

        Border thickBorder = new LineBorder(Color.BLACK, 3);
        EnterBetB.setBorder(thickBorder);
        EnterBetB.setForeground(Color.BLACK);
        EnterBetB.setEnabled(true);

        BetField.setEnabled(true);
        BetField.setEditable(true);
        BetField.setText("");
        changePressed = false;
        DrawCtr = 0;
        ChangeCtr = 0;
        DealCtr = 0;
        disablePlayingButtons();
    }

    public void disablePlayingButtons() {
        Border thickBorder = new LineBorder(Color.GRAY, 3);
        DealB.setBorder(thickBorder);
        DrawB.setBorder(thickBorder);
        ChangeB.setBorder(thickBorder);
        DrawB.setEnabled(false);
        ChangeB.setEnabled(false);
        DealB.setEnabled(false);
    }

    public void enablePlayingButtons() {
        DrawB.setEnabled(true);
        ChangeB.setEnabled(true);
        DealB.setEnabled(true);
        Border thickBorder = new LineBorder(Color.BLACK, 3);
        DealB.setBorder(thickBorder);
        ChangeB.setBorder(thickBorder);
        DrawB.setBorder(thickBorder);
        DrawB.setForeground(Color.BLACK);
        ChangeB.setForeground(Color.BLACK);
        DealB.setForeground(Color.BLACK);
    }

    public void flipCard(int cardIndex) {
        if (changePressed) {
            return;
        }
        ArrayList<Card> copy = player.getCardsInHand();
        Card card = copy.get(cardIndex);
        if (card.isRevealed()) {
            cardsInTable[cardIndex].setIcon(BACKIMAGE);
            card.setRevealed(false);
        } else {
            cardsInTable[cardIndex].setIcon(card.getImage());
            card.setRevealed(true);
        }
        player.setCardsInHand(copy);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackToMenuB;
    private javax.swing.JTextField BetField;
    private javax.swing.JLabel BetLabel;
    private javax.swing.JLabel Card1Label;
    private javax.swing.JPanel Card1Panel;
    private javax.swing.JLabel Card2Label;
    private javax.swing.JPanel Card2Panel;
    private javax.swing.JLabel Card3Label;
    private javax.swing.JPanel Card3Panel;
    private javax.swing.JLabel Card4Label;
    private javax.swing.JPanel Card4Panel;
    private javax.swing.JLabel Card5Label;
    private javax.swing.JPanel Card5Panel;
    private javax.swing.JLabel CashAppearLabel;
    private javax.swing.JLabel CashLabel;
    private javax.swing.JButton ChangeB;
    private javax.swing.JButton DealB;
    private javax.swing.JButton DrawB;
    private javax.swing.JButton EnterBetB;
    private javax.swing.JLabel UsernameAppearLabel;
    private javax.swing.JLabel UsernameLabel;
    private javax.swing.JLabel jLabel4;
    private com.pokergame.gui.TablePanel tablePanel1;
    private com.pokergame.gui.WoodPanel woodPanel1;
    private com.pokergame.gui.WoodTopPanel woodTopPanel1;
    // End of variables declaration//GEN-END:variables
    private JLabel[] cardsInTable;
}
